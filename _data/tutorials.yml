- name: DevOps for small / medium web apps
  link: tutorials/devops_for_small_to_medium_web_applications/README.html
  description: >-
    Comprehensive guide about how to develop and deploy a web application with Alibaba Cloud.
  concepts: DevOps, CI/CD, high-availability
  parts:
  - name: General introduction
    link: tutorials/devops_for_small_to_medium_web_applications/part_00_general_introduction.html
    description: >-
      This is the first part of a tutorial that introduces all the necessary concepts in order to develop and maintain
      a small / medium web application on Alibaba Cloud.
    concepts: CI/CD, Git, GitLab Flow
  - name: GitLab installation and configuration
    link: tutorials/devops_for_small_to_medium_web_applications/part_01_gitlab_installation_and_configuration.html
    description: >-
      This part explains how to install and configure GitLab. It deals with cloud infrastructure, HTTPS, Mail server,
      automatic backup, GitLab Runner, user management, maintenance and upgrade.
    concepts: GitLab
  - name: Continuous Integration
    link: tutorials/devops_for_small_to_medium_web_applications/part_02_continuous_integration.html
    description: >-
      In this part we introduce continuous integration with a very simple pipeline. It is based on a sample web
      application that combines a backend in Java and a frontend in React.
    concepts: Continuous Integration, Java, Spring Boot, HTML, CSS, JavaScript, React, MySQL, Flyway, build tools
  - name: Code quality
    link: tutorials/devops_for_small_to_medium_web_applications/part_03_code_quality.html
    description: >-
      This part focuses on how to integrate a "quality" stage in the CI pipeline thanks to SonarQube. The idea is
      to find bugs earlier and manage technical debt more easily.
    concepts: Code quality, SonarQube, unit test code coverage, PostgreSQL RDS, Let's Encrypt
  - name: Continuous Delivery
    link: tutorials/devops_for_small_to_medium_web_applications/part_04_continuous_delivery.html
    description: >-
      This is the part were we finally deploy our application in the cloud. It introduces a highly available architecture,
      explains how to use Terraform and Packer   to create cloud resources, and how to make the process automatic
      by extending our GitLab pipeline.
    concepts: Continuous delivery, high-availability, Terraform, Packer, infrastructure as code, GitLab flow
  - name: HTTPS configuration
    link: tutorials/devops_for_small_to_medium_web_applications/part_05_https_configuration.html
    description: >-
      This part is a direct extension to the part 4: it explains how to configure HTTPS with SSL/TLS certificates
      from "Let's Encrypt".
    concepts: HTTPS, SSL/TLS certificate, Let's Encrypt, OpenAPI, Python, Terraform, Packer
  - name: Log management
    link: tutorials/devops_for_small_to_medium_web_applications/part_06_log_management.html
    description: >-
      Logs allow administrators and developers to better understand how an application behave. However it can be quite
      challenging to consult logs when they are located on several servers. Log Service is a solution for this problem:
      it provides tools to collects logs from multiple servers and to let authorized persons to search for information
      in them.
    concepts: Log Service, Rsyslog, Logtail, Log Project, Log Store
  - name: Speeding up CI / CD pipeline
    link: tutorials/devops_for_small_to_medium_web_applications/part_07_speeding_up_ci_cd_pipeline.html
    description: >-
      This part is quite short compared to the others: its objective is to reduce the time to process the
      complete CI / CD pipeline. The solution is to create a custom Docker image for the deployment and to build
      VM images in parallel.
    concepts: Dockerfile, Container Registry, GitLab CI
- name: Getting started with CI/CD and Kubernetes
  link: tutorials/getting_started_with_devops_with_kubernetes/README.html
  description: >-
    The goal of this tutorial is to explain how to create a CI/CD pipeline in order to deploy an application
    in Kubernetes running on top of Alibaba Cloud.
  concepts: CI/CD, Git, GitLab, Docker, Kubernetes, Terraform, Java, Maven, Spring Boot
- name: Getting started with CI/CD and Docker Swarm
  link: tutorials/getting_started_with_devops_with_docker_swarm/README.html
  description: >-
    The goal of this tutorial is to explain how to create a CI/CD pipeline in order to deploy an application
    in Docker Swarm running on top of Alibaba Cloud.
  concepts: CI/CD, Git, GitHub, Docker, Docker Swarm, Java, Maven, Spring Boot
- name: Getting started with Rancher
  link: tutorials/getting_started_with_rancher/README.html
  description: >-
    Rancher is a multi-cluster Kubernetes management platform. This tutorial explains how to install Rancher and how
    to integrate it with Alibaba Cloud.
  concepts: Rancher, Docker, Kubernetes, Terraform